// <auto-generated />
using System;
using ITHelper.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITHelper.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ITHelper.Domain.AssetInventoryEntities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("ITHelper.Domain.AssetInventoryEntities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            Name = "Management"
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            Name = "Accounting"
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            Name = "ITC"
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            Name = "Administration"
                        });
                });

            modelBuilder.Entity("ITHelper.Domain.AssetInventoryEntities.Hardware", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAssigned")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DiscontinueDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("HardwareTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InitializationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsOperational")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("HardwareTypeId");

                    b.HasIndex("UserId");

                    b.HasIndex("VendorId");

                    b.ToTable("Hardware");
                });

            modelBuilder.Entity("ITHelper.Domain.AssetInventoryEntities.HardwareType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("HardwareTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Desktop Computers are considered all non-portable Computers",
                            Name = "Desktop Computer / Workstation"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Laptop Computers are considered all the portable Computers",
                            Name = "Laptop Computer"
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            Name = "Smartphone / Phone"
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            Name = "Tablet"
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            Name = "Printer / Multifunctional"
                        });
                });

            modelBuilder.Entity("ITHelper.Domain.AssetInventoryEntities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ITHelper.Domain.AssetInventoryEntities.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Vendors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            Name = "Dell"
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            Name = "HP"
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            Name = "Lenovo"
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            Name = "Xiaomi"
                        },
                        new
                        {
                            Id = 7,
                            Description = "",
                            Name = "Asus"
                        },
                        new
                        {
                            Id = 8,
                            Description = "",
                            Name = "Ricoh"
                        });
                });

            modelBuilder.Entity("ITHelper.Domain.IssueTrackerEntities.ApplicationSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SystemContactId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SystemContactId");

                    b.ToTable("ApplicationSystems");
                });

            modelBuilder.Entity("ITHelper.Domain.IssueTrackerEntities.Issue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ActionsTaken")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ApplicationSystemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateIssued")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IssueDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Resolved")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SolutionComments")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationSystemId");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("ITHelper.Domain.IssueTrackerEntities.SystemContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SystemContacts");
                });

            modelBuilder.Entity("ITHelper.Domain.NetworkPortInfoEntities.NetworkPortInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PortNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Protocol")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UseDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("NetworkPortInformation");
                });

            modelBuilder.Entity("ITHelper.Domain.AssetInventoryEntities.Hardware", b =>
                {
                    b.HasOne("ITHelper.Domain.AssetInventoryEntities.Contact", "Contact")
                        .WithMany("AllHardware")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITHelper.Domain.AssetInventoryEntities.Department", "Department")
                        .WithMany("Assets")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITHelper.Domain.AssetInventoryEntities.HardwareType", "HardwareType")
                        .WithMany("AllHardware")
                        .HasForeignKey("HardwareTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITHelper.Domain.AssetInventoryEntities.User", "User")
                        .WithMany("Assets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITHelper.Domain.AssetInventoryEntities.Vendor", "Vendor")
                        .WithMany("AllHardware")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("Department");

                    b.Navigation("HardwareType");

                    b.Navigation("User");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("ITHelper.Domain.AssetInventoryEntities.User", b =>
                {
                    b.HasOne("ITHelper.Domain.AssetInventoryEntities.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ITHelper.Domain.IssueTrackerEntities.ApplicationSystem", b =>
                {
                    b.HasOne("ITHelper.Domain.IssueTrackerEntities.SystemContact", "SystemContact")
                        .WithMany("ApplicationSystems")
                        .HasForeignKey("SystemContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SystemContact");
                });

            modelBuilder.Entity("ITHelper.Domain.IssueTrackerEntities.Issue", b =>
                {
                    b.HasOne("ITHelper.Domain.IssueTrackerEntities.ApplicationSystem", "ApplicationSystem")
                        .WithMany("Issues")
                        .HasForeignKey("ApplicationSystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationSystem");
                });

            modelBuilder.Entity("ITHelper.Domain.AssetInventoryEntities.Contact", b =>
                {
                    b.Navigation("AllHardware");
                });

            modelBuilder.Entity("ITHelper.Domain.AssetInventoryEntities.Department", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ITHelper.Domain.AssetInventoryEntities.HardwareType", b =>
                {
                    b.Navigation("AllHardware");
                });

            modelBuilder.Entity("ITHelper.Domain.AssetInventoryEntities.User", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("ITHelper.Domain.AssetInventoryEntities.Vendor", b =>
                {
                    b.Navigation("AllHardware");
                });

            modelBuilder.Entity("ITHelper.Domain.IssueTrackerEntities.ApplicationSystem", b =>
                {
                    b.Navigation("Issues");
                });

            modelBuilder.Entity("ITHelper.Domain.IssueTrackerEntities.SystemContact", b =>
                {
                    b.Navigation("ApplicationSystems");
                });
#pragma warning restore 612, 618
        }
    }
}
